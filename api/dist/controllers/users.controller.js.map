{"version":3,"sources":["controllers/users.controller.js"],"names":["router","Router","init","req","res","userParam","email","password","admin","create","then","status","send","msg","catch","err","authUser","auth","body","obj","token","isAdmin","list","json","users","getById","params","_id","registerUser","updateUser","update","deleteUser","delete","get","post","put","module","exports"],"mappings":"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","file":"users.controller.js","sourcesContent":["import express from 'express';\nimport userService from '../services/users.service';\n\nconst router = express.Router();\n\nconst init = (req, res) => {\n  const userParam = {\n    email: 'Admin@admin.com',\n    password: 'admin',\n    admin: true };\n\n  userService.create(userParam)\n    .then(msg => res.status(200).send(msg))\n    .catch(err => res.status(400).send(err));\n};\n\nconst authUser = (req, res) => {\n  userService.auth(req.body.email, req.body.password)\n    .then((obj) => {\n      if (obj.token) res.status(200).send({ token: obj.token, isAdmin: obj.isAdmin });\n      else res.status(401);\n    })\n    .catch(err => res.status(400).send(err));\n};\n\nconst list = (req, res) => {\n  userService.list()\n    .then(users => res.status(200).json(users))\n    .catch(err => res.status(400).send(err));\n};\n\nconst getById = (req, res) => {\n  userService.getById(req.params._id)\n    .then(users => res.status(200).json(users))\n    .catch(err => res.status(400).send(err));\n};\n\nconst registerUser = (req, res) => {\n  userService.create(req.body)\n    .then(msg => res.status(200).send(msg))\n    .catch(err => res.status(400).send(err));\n};\n\nconst updateUser = (req, res) => {\n  userService.update(req.params._id, req.body)\n    .then(msg => res.status(200).send(msg))\n    .catch(err => res.status(400).send(err));\n};\n\nconst deleteUser = (req, res) => {\n  userService.delete(req.params._id)\n    .then(msg => res.status(200).send(msg))\n    .catch(err => res.status(400).send(err));\n};\n\nrouter.get('/init', init);\nrouter.get('/list', list);\nrouter.get('/:_id', getById);\nrouter.post('/auth', authUser);\nrouter.post('/register', registerUser);\nrouter.put('/:_id', updateUser);\nrouter.delete('/:_id', deleteUser);\n\nmodule.exports = router;\n"]}