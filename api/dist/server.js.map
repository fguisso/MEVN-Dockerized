{"version":3,"sources":["server.js"],"names":["app","secret","process","env","SECRET","set","PORT","HOST","use","urlencoded","extended","json","req","res","next","header","get","send","unless","path","require","server","listen","console","log","address","port"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA,IAAMC,SAASC,QAAQC,GAAR,CAAYC,MAA3B;;AAEAJ,IAAIK,GAAJ,CAAQ,MAAR,EAAgBH,QAAQC,GAAR,CAAYG,IAAZ,IAAoB,IAApC;AACAN,IAAIK,GAAJ,CAAQ,MAAR,EAAgBH,QAAQC,GAAR,CAAYI,IAAZ,IAAoB,SAApC;;AAEAP,IAAIQ,GAAJ,CAAQ,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAV,IAAIQ,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;;AAEAX,IAAIQ,GAAJ,CAAQ,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,wBAA3C;AACAF,MAAIE,MAAJ,CACE,8BADF,EAEE,iGAFF;AAGAF,MAAIE,MAAJ,CAAW,kCAAX,EAA+C,MAA/C;AACAD;AACD,CARD;;AAUAd,IAAIgB,GAAJ,CAAQ,GAAR,EAAa,UAACJ,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAII,IAAJ,CAAS,cAAT,CAAd;AAAA,CAAb;;AAEAjB,IAAIQ,GAAJ,CAAQ,QAAR,EAAkB,0BAAW,EAAEP,cAAF,EAAX,EACfiB,MADe,CACR,EAAEC,MAAM,CAAC,aAAD,EAAgB,aAAhB,EAA+B,iBAA/B,CAAR,EADQ,CAAlB;;AAGAnB,IAAIQ,GAAJ,CAAQ,QAAR,EAAkB,0BAAW,EAAEP,cAAF,EAAX,CAAlB;AACAD,IAAIQ,GAAJ,CAAQ,OAAR,EAAiB,0BAAW,EAAEP,cAAF,EAAX,CAAjB;;AAGAD,IAAIQ,GAAJ,CAAQ,QAAR,EAAkBY,QAAQ,mCAAR,CAAlB;AACApB,IAAIQ,GAAJ,CAAQ,QAAR,EAAkBY,QAAQ,mCAAR,CAAlB;AACApB,IAAIQ,GAAJ,CAAQ,OAAR,EAAiBY,QAAQ,mCAAR,CAAjB;;AAEA,IAAMC,SAASrB,IAAIsB,MAAJ,CAAWtB,IAAIgB,GAAJ,CAAQ,MAAR,CAAX,EAA4BhB,IAAIgB,GAAJ,CAAQ,MAAR,CAA5B,EAA6C;AAAA,SAC1DO,QAAQC,GAAR,mCAA4CH,OAAOI,OAAP,GAAiBA,OAA7D,SAAwEJ,OAAOI,OAAP,GAAiBC,IAAzF,CAD0D;AAAA,CAA7C,CAAf","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport expressJwt from 'express-jwt';\n\nconst app = express();\n\nconst secret = process.env.SECRET;\n\napp.set('port', process.env.PORT || 3000);\napp.set('host', process.env.HOST || '0.0.0.0');\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'PUT, GET, POST, DELETE');\n  res.header(\n    'Access-Control-Allow-Headers',\n    'Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Control-Allow-Credentials');\n  res.header('Access-Control-Allow-Credentials', 'true');\n  next();\n});\n\napp.get('/', (req, res) => res.send('Hello World!'));\n\napp.use('/users', expressJwt({ secret })\n  .unless({ path: ['/users/auth', '/users/init', '/users/register'] }));\n\napp.use('/items', expressJwt({ secret }));\napp.use('/info', expressJwt({ secret }));\n\n\napp.use('/users', require('./controllers/users.controller.js'));\napp.use('/items', require('./controllers/items.controller.js'));\napp.use('/info', require('./controllers/infos.controller.js'));\n\nconst server = app.listen(app.get('port'), app.get('host'), () =>\n  console.log(`\\nServer listening at http://${server.address().address}:${server.address().port}`));\n"]}