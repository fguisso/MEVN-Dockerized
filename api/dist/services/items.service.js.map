{"version":3,"sources":["services/items.service.js"],"names":["service","list","deferred","defer","find","err","items","reject","name","message","resolve","promise","countItems","count","recentItems","sort","created_at","limit","select","exec","create","itemParam","newItem","solicitante","status","Date","updated_at","save","update","_id","findByIdAndUpdate","_delete","findByIdAndRemove","recents","delete"],"mappings":"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","file":"items.service.js","sourcesContent":["import Q from 'q';\nimport { items as Items } from '../models/db-connection';\n\nconst service = {};\n\nconst list = () => {\n  const deferred = Q.defer();\n  Items.find({}, (err, items) => {\n    if (err) deferred.reject(`${err.name} : ${err.message}`);\n    if (items) deferred.resolve(items);\n    else deferred.resolve('Nothing to show here!');\n  });\n\n  return deferred.promise;\n};\n\nconst countItems = () => {\n  const deferred = Q.defer();\n\n  Items.count({}, (err, count) => {\n    if (err) deferred.reject(`${err.name} : ${err.message}`);\n    if (count) deferred.resolve(count);\n    else deferred.resolve('Nothing to show here! Wheres my Count?');\n  });\n\n  return deferred.promise;\n};\n\nconst recentItems = () => {\n  const deferred = Q.defer();\n\n  Items.find({})\n    .sort({ created_at: -1 })\n    .limit(5)\n    .select({ name: 1, created_at: 1 })\n    .exec((err, items) => {\n      if (err) deferred.reject(`${err.name} : ${err.message}`);\n      if (items) deferred.resolve(items);\n      else deferred.resolve('Nothing to show here!');\n    });\n\n  return deferred.promise;\n};\n\nconst create = (itemParam) => {\n  const deferred = Q.defer();\n\n  const newItem = new Items({\n    name: itemParam.name,\n    solicitante: itemParam.solicitante,\n    status: itemParam.status,\n    created_at: new Date(),\n    updated_at: new Date() });\n\n  newItem.save((err) => {\n    if (err) deferred.reject(`${err.name} : ${err.message}`);\n    else deferred.resolve('Successful item creation.');\n  });\n\n  return deferred.promise;\n};\n\nconst update = (_id, itemParam) => {\n  const deferred = Q.defer();\n\n  itemParam.updated_at = new Date();\n\n  Items.findByIdAndUpdate(_id, itemParam, (err) => {\n    if (err) deferred.reject(`${err.name} : ${err.message}`);\n    else deferred.resolve('Item has been updated.');\n  });\n\n  return deferred.promise;\n};\n\nconst _delete = (_id) => {\n  const deferred = Q.defer();\n\n  Items.findByIdAndRemove(_id, (err) => {\n    if (err) deferred.reject(`${err.name} : ${err.message}`);\n    else deferred.resolve('Item has been deleted.');\n  });\n\n  return deferred.promise;\n};\n\nservice.list = list;\nservice.count = countItems;\nservice.recents = recentItems;\nservice.create = create;\nservice.update = update;\nservice.delete = _delete;\n\nexport default service;\n"]}